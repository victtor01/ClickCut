// <auto-generated />
using System;
using ClickCut.Infra.Adapters.Out.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClickCut.Infra.Migrations
{
	[DbContext(typeof(AppDatabaseContext))]
	[Migration("20250730205703_FirstCommit")]
	partial class FirstCommit
	{
		/// <inheritdoc />
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "9.0.7")
				.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("ClickCut.Domain.Models.Link", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("Url")
						.IsRequired()
						.HasColumnType("text");

					b.Property<Guid>("UserId")
						.HasColumnType("uuid");

					b.HasKey("Id");

					b.HasIndex("UserId");

					b.ToTable("Link");
				});

			modelBuilder.Entity("ClickCut.Domain.Models.User", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<DateTime>("CreatedAt")
						.HasColumnType("timestamp with time zone");

					b.Property<string>("Email")
						.IsRequired()
						.HasMaxLength(255)
						.HasColumnType("character varying(255)")
						.HasColumnName("Email");

					b.Property<string>("Password")
						.IsRequired()
						.HasColumnType("text")
						.HasColumnName("PasswordHash");

					b.Property<DateTime>("UpdatedAt")
						.HasColumnType("timestamp with time zone");

					b.Property<string>("Username")
						.IsRequired()
						.HasMaxLength(200)
						.HasColumnType("character varying(200)");

					b.HasKey("Id");

					b.ToTable("Users");
				});

			modelBuilder.Entity("ClickCut.Domain.Models.Link", b =>
				{
					b.HasOne("ClickCut.Domain.Models.User", "User")
						.WithMany("Links")
						.HasForeignKey("UserId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("User");
				});

			modelBuilder.Entity("ClickCut.Domain.Models.User", b =>
				{
					b.Navigation("Links");
				});
#pragma warning restore 612, 618
		}
	}
}
